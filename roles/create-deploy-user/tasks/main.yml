- name: create {{ deploy }} user
  user: name={{ deploy }} comment="deploy user" generate_ssh_key=yes state=present shell=/bin/bash

#- name: authorize my SSH key to access {{ deploy }}
 # authorized_key: user={{ deploy }} key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: copy ssh_config so that github doesn't do host verification
  action: copy src=ssh_config dest=~{{ deploy }}/.ssh/config owner={{ deploy }} group={{ deploy }}

- name: copy authorized keys
  #action: copy src=authorized_keys dest=~{{ deploy }}/.ssh/ owner={{ deploy }} group={{ deploy }}
  action: copy src=authorized_keys dest=~{{ deploy }}/.ssh/authorized_keys owner={{ deploy }} group={{ deploy }}
  #action: copy src=~/.ssh/id_rsa.pub dest=~{{ deploy }}/.ssh/id_rsa.pub owner={{ deploy }} group={{ deploy }}


- name: add {{ deploy }} to sudoers
  lineinfile: "dest=/etc/sudoers state=present line='{{ deploy }} ALL=NOPASSWD: ALL'"

#- name: require password upon each invocation of sudo
 # lineinfile: "dest=/etc/sudoers state=present line='Defaults timestamp_timeout=0'"

- name: create www-data group
  group: name=www-data state=present

- name: create apps directory owned by {{ deploy }}:www-data with setgid bit
  # note: 2755 => 2=setgid, 7=owner rwx, 5=group rx, 5=other rx
  file: name=~{{ deploy }}/{{ app_name }} state=directory owner={{ deploy }} group=www-data mode=2755

#- name: remove authorized_keys for root (specifically for DigitalOcean)
 # file: name=/root/.ssh/authorized_keys state=absent